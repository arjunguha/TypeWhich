name: gt-tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - id: cache-cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Compile (smt)
      if: steps.cache-cargo.outputs.cache-hit != 'true'
      run: cargo build
    - name: Unit tests
      run: cargo test -- --nocapture
      
  test:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - tool: grift
            suite: grift
            ignore: false
          - tool: ins-and-outs
            suite: migeed
            ignore: false
          - tool: no-context
            suite: migeed
            ignore: false
          - tool: smt
            suite: migeed
            ignore: false
      
    steps:
    - uses: actions/checkout@v2
    - id: cache-cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Compile (smt)
      if: steps.cache-cargo.outputs.cache-hit != 'true'
      run: |
        echo Build step ran but the results weren't in cache. What's up?
        exit 1
    - name: Compile and test (ins-and-outs)
      if: ${{ matrix.tool }} == 'ins-and-outs'
      working-directory: ins-and-outs
      run: |
        cargo build
        cargo test -- --nocapture
    - name: ${{ matrix.tool }} on ${{ matrix.suite }}
      run: ./test-runner.sh ${{ matrix.tool }} ${{ matrix.suite }}
      continue-on-error: ${{ matrix.ignore }}

